#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

# Allow versions to be specificied by the requesting application

[ -z "${NGINX_VERSION}" ] && NGINX_VERSION=1.12.2
[ -z "${PCRE_VERSION}" ] && PCRE_VERSION=8.41
[ -z "${PAGESPEED_VERSION}" ] && PAGESPEED_VERSION=1.13.35.2

MOD_NGINX_PAGESPEED_VERSION=${PAGESPEED_VERSION}-stable
MOD_NGINX_PAGESPEED_DIRECTORY=incubator-pagespeed-ngx-${MOD_NGINX_PAGESPEED_VERSION}


nginx_tarball_url=http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
pcre_tarball_url=http://downloads.sourceforge.net/project/pcre/pcre/${PCRE_VERSION}/pcre-${PCRE_VERSION}.tar.bz2
ps_ngx_tarball_url=https://github.com/apache/incubator-pagespeed-ngx/archive/v${MOD_NGINX_PAGESPEED_VERSION}.zip

logger -p user.notice -t "slugc[$$]" "nginx_build_pack nginx_install_start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

ROOT_DIR=$(cd ${BIN_DIR} && cd .. ; pwd) # absolute path

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

echo "BUILD_DIR = " ${BUILD_DIR}
echo "CACHE_DIR = " ${CACHE_DIR}
echo "ENV_DIR = " ${ENV_DIR}

LOGGER_FLAGS=""

#create the dirs if needed
mkdir -p ${CACHE_DIR}
mkdir -p ${BUILD_DIR}
mkdir -p ${BUILD_DIR}/bin

NGINX_CACHE_DIR=${CACHE_DIR}/nginx-${NGINX_VERSION}

NGINX_DIST_DIR=${CACHE_DIR}/dist/nginx

[ -n "${FORCE_REBUILD}" ] && REBUILD="true" || REBUILD="false"

echo "Checking FORCE_REBUILD = " ${FORCE_REBUILD}
echo "Setting REBUILD = " ${REBUILD}

if [ "${REBUILD}" == "true" ]
then
    rm -rf ${CACHE_DIR}
    mkdir -p ${CACHE_DIR}
fi

if [ ! -d ${NGINX_CACHE_DIR} ]
then
    (
        cd ${CACHE_DIR}

        echo "Downloading ${ps_ngx_tarball_url}" # expanded into a new directory (MOD_NGINX_PAGESPEED_DIRECTORY)
        curl --silent -L ${ps_ngx_tarball_url} > ps_ngx.zip
        unzip ps_ngx.zip

        (
            cd ${MOD_NGINX_PAGESPEED_DIRECTORY}
            echo $PWD
            ps_tarball_url=$(scripts/format_binary_url.sh PSOL_BINARY_URL)
            echo $ps_tarball_url 
            echo "Downloading ${ps_tarball_url}" # expanded into a new directory (psol)
            curl --silent -L ${ps_tarball_url} | tar xz
        )

        echo "Downloading ${nginx_tarball_url}" # expanded into a new directory (nginx-${NGINX_VERSION})
        curl --silent -L ${nginx_tarball_url} | tar xz

        cd nginx-${NGINX_VERSION}

        echo "Downloading ${pcre_tarball_url}"
        curl --silent -L ${pcre_tarball_url} | tar xj

        echo "Running configure for NGINX"
        ./configure \
            --with-pcre=pcre-${PCRE_VERSION} \
            --prefix=${NGINX_DIST_DIR} \
            --with-http_ssl_module \
            --add-module=../${MOD_NGINX_PAGESPEED_DIRECTORY}

        echo "Building NGINX with Google PageSpeed module"
        make

        # Be sure to clean any existing NGINX distribution
        rm -rf ${NGINX_DIST_DIR}

        echo "Making the installable distribution for NGINX"
        make install
    )
fi

# Copy the built nginx distribution and other needed artefacts

cp -R ${NGINX_DIST_DIR} ${BUILD_DIR}
echo "NGINX copied to BUILD_DIR"

cp -R ${ROOT_DIR}/config ${BUILD_DIR}/config
echo "CONFIG copied to BUILD_DIR/config"

cp ${ROOT_DIR}/scripts/start-nginx.sh ${BUILD_DIR}
echo "start-nginx.sh copied to BUILD_DIR"

cp ${ROOT_DIR}/bin/start-nginx ${BUILD_DIR}/bin/
echo '-----> nginx-buildpack: Added start-nginx to app/bin'

chmod +x ${BUILD_DIR}/*.sh

# Add nginx to the PATH

BUILD_TARGET="$BUILD_DIR/.profile.d/nginx.sh"
mkdir -p $(dirname ${BUILD_TARGET})
echo 'export NGINX_BASE_DIR=~/nginx' > ${BUILD_TARGET} # single quote to delay expansion until deployment time
echo 'export PATH="$NGINX_BASE_DIR/sbin:$PATH"' >> ${BUILD_TARGET} # likewise expand this setting at deployment time

logger -p user.notice -t "slugc[$$]" "nginx_build_pack nginx_install_end $LOGGER_FLAGS"
